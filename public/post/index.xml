<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Amir personal website</title>
    <link>https://example.com/post/</link>
    <description>Recent content in Posts on Amir personal website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright 2023, Amir Hesamian</copyright>
    <lastBuildDate>Sat, 09 Jun 2018 23:16:11 -0600</lastBuildDate><atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic-type-builder C# library</title>
      <link>https://example.com/post/old/programming/2018-06-10-typebuilder/</link>
      <pubDate>Sat, 09 Jun 2018 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/programming/2018-06-10-typebuilder/</guid>
      <description>I really wanted to create a type on the fly by extending an existing type and then add some extra properties to it. Thanks to System.Reflection.Emit written by Mono team it is possible to achieve this in dotnet core. This package comes with a TypeBuilder class but using it is really not a straightforward thing to do. Hence I created this small library to do the job (repo url with nuget package too).</description>
    </item>
    
    <item>
      <title>Local-date C# library</title>
      <link>https://example.com/post/old/programming/2018-06-10-localdate/</link>
      <pubDate>Sat, 09 Jun 2018 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/programming/2018-06-10-localdate/</guid>
      <description>After learning the hard truth that C# does not come with a date only type and DateTime contains both the date and time, I started the journey to find the best library that fills the gap. I experimented with NodaTime library&amp;rsquo;s LocalDate class but I found it difficult to use for very basic stuff like ToString formatting and parsing given string and an optional pattern. Hence I decided to write my own (repo url with nuget package too).</description>
    </item>
    
    <item>
      <title>Dynamic-map C# library</title>
      <link>https://example.com/post/old/programming/2018-06-05-dynamic-map/</link>
      <pubDate>Tue, 05 Jun 2018 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/programming/2018-06-05-dynamic-map/</guid>
      <description>I searched for hours for a library similar to AutoMapper but to map an object to a Type. In other words, instead of Map&amp;lt;TSource, TDestination&amp;gt;(obj), having something like this: Map(typeof(TDestination), obj). I even had an idea to use Activator.CreateInstance() to dynamically run the generic method call of Map&amp;lt;TSource, TDestination&amp;gt;(obj) to substitute the static generic type but I realized AutoMapper also needs a mapping profile. Writing that would be complicated &amp;hellip; really complicated.</description>
    </item>
    
    <item>
      <title>Defended M.S. Thesis</title>
      <link>https://example.com/post/old/personal/2017-04-21-thesis-defence/</link>
      <pubDate>Fri, 21 Apr 2017 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2017-04-21-thesis-defence/</guid>
      <description>Yesterday, I defended my M.S. Thesis. My committee members (Dr. Lingfeng Wang and Dr. Adrian Dumitrescu) were helpful. Thesis presentation was 45 minutes and 10 minutes questions. In the end, I was congratulated by my advisor (Dr. Guangwu Xu) and committee members. My presentation and Thesis (short version, long version) is available here.</description>
    </item>
    
    <item>
      <title>Implementing R-LWE-KEX protocols via SageMath</title>
      <link>https://example.com/post/old/personal/2016-11-25-rlwe-kex-sagemath/</link>
      <pubDate>Fri, 25 Nov 2016 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2016-11-25-rlwe-kex-sagemath/</guid>
      <description>Basics of R-LWE key exchange (more information here):
  Alice: $$e, s \leftarrow \chi $$ $$b=as+e$$
  Bob: $$e&#39;, s&#39; \leftarrow \chi$$ $$b&#39;=as&#39;+e&#39;$$
  Alice&amp;rsquo;s key: $$ \to s*(as&#39; + e&#39;) = ass&#39; + se&#39;$$
  Bob&amp;rsquo;s key: $$ \to s&#39;*(as + e) = ass&#39; + s&amp;rsquo;e$$
  As you can see, $$ \to s*(as&#39; + e&#39;)$$$$ \neq$$$$s&#39;*(as + e)$$ but they are close considering that error is relatively small.</description>
    </item>
    
    <item>
      <title>Sage Math is all I needed in a programming language!</title>
      <link>https://example.com/post/old/personal/2016-10-03-sagemath/</link>
      <pubDate>Mon, 03 Oct 2016 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2016-10-03-sagemath/</guid>
      <description>Writing a blog which is something I have never done before and by reading my previous blog posts, it is clear that I struggled with a proper number theory library. NTL and FLINT are great number theory packages written in C for people who have studied and used number theory for a long time and speed is their primary concern. On the other hand, there are people like me who have just learned about number theory and want to implement something without spending so much time learning a different programming language and a library that has been around for 10+ years (constantly being improved and new functionalities being introduced to).</description>
    </item>
    
    <item>
      <title>Journey with JavaScript trying to implement LLL</title>
      <link>https://example.com/post/old/personal/2016-10-02-javascript-lll/</link>
      <pubDate>Sun, 02 Oct 2016 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2016-10-02-javascript-lll/</guid>
      <description>Fresh out of my summer internship at Northwestern mutual and working extensively with JavaScript and Node.js, I was reading about LLL and basics of lattice and lattice cryptography. I tried installing NTL on my Windows machine. It was a nightmare. Lack of documentation for such an important library was just astonishing. I did not have any success with Windows. Thereafter, I installed Ubuntu (in fact, I never switched backed to Windows) and had some success with NTL on Ubuntu.</description>
    </item>
    
    <item>
      <title>Multivariable Polynomial ring using java&#39;s BigInteger library</title>
      <link>https://example.com/post/old/personal/2016-07-27-polynomial-library/</link>
      <pubDate>Wed, 27 Jul 2016 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2016-07-27-polynomial-library/</guid>
      <description>After disappointing and certainty a long fail journey trying to learn NTL (Number Theory package written in C++), I decided to write my own Ring implementation. In short, it was a difficult talk but I learned a lot.
Let&amp;rsquo;s discuss the details. I needed a two classes: Monomial and Ring plus enum class to handle operations. Now, the key design choice is how to store the relationships between Monomials and operations.</description>
    </item>
    
    <item>
      <title>University Portal as part of Intelligent user interface course</title>
      <link>https://example.com/post/old/personal/2016-07-26-uwm-now-portal/</link>
      <pubDate>Tue, 26 Jul 2016 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2016-07-26-uwm-now-portal/</guid>
      <description>As part of Intelligent user interface course, we‌ (students) were asked to come up with a project that demonstrates our understanding on course materials. By materials, I mean research papers that we read every week. To come up with a project idea, I looked for a problem. Something that I can do better.
That thing for me was UWM website (main page). It is inefficient in delivering the content. It is too simply designed that we can question it&amp;rsquo;s existence.</description>
    </item>
    
    <item>
      <title>Naturalization exam practice website</title>
      <link>https://example.com/post/old/personal/2015-08-01-naturalization-exam/</link>
      <pubDate>Sat, 01 Aug 2015 23:16:11 -0600</pubDate>
      
      <guid>https://example.com/post/old/personal/2015-08-01-naturalization-exam/</guid>
      <description>I believe it is not practical to go to an exam without proper studying and major part of any study is to look over sample questions or previous exams. As a person who was going to take a naturalization exam, which is a exam that I needed to pass in order to become U.S. citizen after five years of waiting. It is an important exam for any green card holder. It is a major step forward.</description>
    </item>
    
  </channel>
</rss>
